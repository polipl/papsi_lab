name: IT Ticket Docker Image Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  lint-flake8:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Take Python 3.10
      uses: actions/setup-python@v4
      with: 
        python-version: '3.10'
    # - 
    #   name: Install GCC
    #   run: sudo apt-get -y install gcc
    # -
    #   name: Install libpq-dev
    #   run: sudo apt-get -y install libpq-dev
    # - 
    #   name: Install requirements
    #   run: pip install -r requirements.txt
    #   working-directory: ITticket
    - name: install black,flake8
      run: sudo apt-get -y install flake8 black
    - name: black
      run: black .
      working-directory: ITticket
    - 
      name: Check Lint
      run: flake8 . --ignore E501,W503
      working-directory: ITticket


  deploy:
    runs-on: ubuntu-latest
    needs: lint-flake8
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: docker run
      run:  docker run --privileged --rm tonistiigi/binfmt --install all

    - name: buildx create
      run: docker buildx create --use --name=multiarch --driver docker-container

    - name: Build docker image
      # run: docker build -t itticket .
      run: docker buildx build --platform linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8 --output type=image -t ${{ secrets.DOCKERHUB_USERNAME }}/itticket --push .
    # - 
    #   name: Tags
    #   run: docker tag itticket ${{ secrets.DOCKERHUB_USERNAME }}/itticket
    # - 
    #   name: Push image to dockerhub
    #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/itticket
    -
      name: Docker hub logout
      run: docker logout
    